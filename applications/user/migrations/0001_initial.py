# Generated by Django 4.2.20 on 2025-04-01 18:16

import applications.user.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True, verbose_name='email почта')),
                ('role', models.CharField(choices=[('CUSTOMER', 'Customer'), ('MODERATOR', 'Moderator'), ('ADMIN', 'Admin')], default='CUSTOMER', max_length=20, verbose_name='роль')),
                ('is_active', models.BooleanField(default=False, verbose_name='активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='статус модератора')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='время присоеденения')),
                ('activation_code', models.CharField(blank=True, max_length=6, verbose_name='код активации')),
                ('full_name', models.CharField(blank=True, max_length=150, verbose_name='имя')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='номер телефона')),
                ('reset_code', models.CharField(blank=True, max_length=6, null=True)),
                ('reset_code_created_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'ordering': ('-date_joined',),
            },
            managers=[
                ('objects', applications.user.models.UserManager()),
            ],
        ),
    ]
