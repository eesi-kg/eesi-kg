# Generated by Django 4.2.20 on 2025-04-01 18:16

import applications.common.models
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Balcony',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balcony', models.CharField(max_length=255, unique=True, verbose_name='балкон')),
            ],
            options={
                'verbose_name': 'Балкон',
                'verbose_name_plural': 'Балконы',
            },
        ),
        migrations.CreateModel(
            name='BathRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bathroom', models.CharField(max_length=255, unique=True, verbose_name='санузел')),
            ],
            options={
                'verbose_name': 'Санузел',
                'verbose_name_plural': 'Санузлы',
            },
        ),
        migrations.CreateModel(
            name='BuildingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Тип строения')),
            ],
            options={
                'verbose_name': 'Строение',
                'verbose_name_plural': 'Строения',
            },
        ),
        migrations.CreateModel(
            name='ConditionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Состояние')),
            ],
            options={
                'verbose_name': 'Состояние',
                'verbose_name_plural': 'Состояния',
            },
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, verbose_name='Застройщик')),
            ],
            options={
                'verbose_name': 'Застройщик',
                'verbose_name_plural': 'Застройщики',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(max_length=255, unique=True, verbose_name='Документы')),
            ],
            options={
                'verbose_name': 'документ',
                'verbose_name_plural': 'документы',
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor', models.IntegerField(verbose_name='Этаж')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Этаж',
                'verbose_name_plural': 'Этажи',
                'ordering': ['floor'],
            },
        ),
        migrations.CreateModel(
            name='FloorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('floor_type', models.CharField(max_length=255, unique=True, verbose_name='пол')),
            ],
            options={
                'verbose_name': 'Пол',
                'verbose_name_plural': 'Пол',
            },
        ),
        migrations.CreateModel(
            name='Furniture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('furniture', models.CharField(max_length=255, unique=True, verbose_name='мебель')),
            ],
            options={
                'verbose_name': 'Мебель',
                'verbose_name_plural': 'Мебели',
            },
        ),
        migrations.CreateModel(
            name='Gas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gas', models.CharField(max_length=255, unique=True, verbose_name='газ')),
            ],
            options={
                'verbose_name': 'Газ',
                'verbose_name_plural': 'Газ',
            },
        ),
        migrations.CreateModel(
            name='HeatingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Тип отопления')),
            ],
            options={
                'verbose_name': 'Отопление',
                'verbose_name_plural': 'Отопления',
            },
        ),
        migrations.CreateModel(
            name='Internet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internet', models.CharField(max_length=255, unique=True, verbose_name='интернет')),
            ],
            options={
                'verbose_name': 'Интернет',
                'verbose_name_plural': 'Интернеты',
            },
        ),
        migrations.CreateModel(
            name='MainDoor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_door', models.CharField(max_length=255, unique=True, verbose_name='входная дверь')),
            ],
            options={
                'verbose_name': 'Входная дверь',
                'verbose_name_plural': 'Входные двери',
            },
        ),
        migrations.CreateModel(
            name='ObjectType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тип коммерческого объекта',
                'verbose_name_plural': 'Тип коммерческих объектов',
            },
        ),
        migrations.CreateModel(
            name='Other',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other', models.CharField(max_length=255, unique=True, verbose_name='Разное')),
            ],
            options={
                'verbose_name': 'разное',
                'verbose_name_plural': 'разные',
            },
        ),
        migrations.CreateModel(
            name='Parking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parking', models.CharField(max_length=255, unique=True, verbose_name='парковка')),
            ],
            options={
                'verbose_name': 'Парковка',
                'verbose_name_plural': 'Парковки',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='Номер телефона должен начинаться с +996, за которым следуют 9 цифр. Пример: +996700123456', regex='^\\+996\\d{9}$')], verbose_name='телефон')),
            ],
            options={
                'verbose_name': 'Телефон',
                'verbose_name_plural': 'Телефоны',
            },
        ),
        migrations.CreateModel(
            name='RealEstateAd',
            fields=[
                ('public_id', models.CharField(default=applications.common.models.generate_short_id, editable=False, max_length=8, primary_key=True, serialize=False, unique=True)),
                ('ad_type', models.CharField(choices=[('sell', 'продажа'), ('rent', 'аренда')], default='sell', max_length=255, verbose_name='тип сделки')),
                ('rent_period', models.CharField(blank=True, choices=[('hourly', 'почасовая'), ('daily', 'посуточно'), ('monthly', 'по месячно'), ('long_term', 'на долгий срок')], max_length=255, null=True, verbose_name='период аренды')),
                ('ENI_code', models.CharField(blank=True, max_length=14, null=True, verbose_name='код ЕНИ')),
                ('street_name', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Улица')),
                ('house_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер дома')),
                ('link_2gis', models.URLField(blank=True, max_length=2048, verbose_name='Ссылка 2gis')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='Долгота и Широта объекта')),
                ('link_Youtube', models.URLField(blank=True, max_length=2048, verbose_name='Ссылка YouTube')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=False, verbose_name='Активный')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Премиум объявление')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('ceiling_height', models.FloatField(blank=True, null=True, verbose_name='высота потолков')),
                ('description', models.TextField(blank=True, verbose_name='описание')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='real_estate_qrcodes/', verbose_name='QR-code')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='цена')),
                ('is_total_price', models.BooleanField(default=True, verbose_name='цена за всё')),
                ('installment', models.BooleanField(blank=True, null=True, verbose_name='возможность рассрочки')),
                ('mortgage', models.BooleanField(blank=True, null=True, verbose_name='возможность ипотеки')),
                ('measurements_docs', models.FileField(blank=True, help_text='точные замеры', null=True, upload_to='pdfs/', verbose_name='обмеры')),
                ('designing_docs', models.FileField(blank=True, help_text='архитектурное решение', null=True, upload_to='pdfs/', verbose_name='дизайн')),
                ('elevator', models.BooleanField(blank=True, null=True, verbose_name='Лифт')),
                ('balcony', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_balcony', to='real_estate.balcony', verbose_name='балкон')),
                ('bathroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_bath_room', to='real_estate.bathroom', verbose_name='санузел')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='real_estate_city', to='common.city', verbose_name='город/село')),
                ('condition', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_type', to='real_estate.conditiontype', verbose_name='состояние')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='real_estate_price_currency', to='common.currency', verbose_name='валюта')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='real_estate_district', to='common.district', verbose_name='район')),
                ('document', models.ManyToManyField(blank=True, related_name='real_estate_document', to='real_estate.document', verbose_name='документы')),
                ('exchange', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='real_estate_exchange', to='common.exchange', verbose_name='тип обмена')),
                ('floor_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_floor_type', to='real_estate.floortype', verbose_name='пол')),
                ('furniture', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_furniture', to='real_estate.furniture', verbose_name='мебель')),
                ('gas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_gs', to='real_estate.gas', verbose_name='газ')),
                ('heating_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='heating_type', to='real_estate.heatingtype', verbose_name='отопление')),
                ('internet', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_internet', to='real_estate.internet', verbose_name='интернет')),
                ('main_door', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_main_door', to='real_estate.maindoor', verbose_name='входная дверь')),
                ('other', models.ManyToManyField(blank=True, related_name='real_estate_other', to='real_estate.other', verbose_name='разное')),
                ('parking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_parking', to='real_estate.parking', verbose_name='парковка')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='real_estate_region', to='common.region', verbose_name='регион')),
            ],
        ),
        migrations.CreateModel(
            name='RoomLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Расположение')),
            ],
            options={
                'verbose_name': 'Расположение',
                'verbose_name_plural': 'Расположение',
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Описание')),
                ('room_count', models.IntegerField(verbose_name='Количество комнат')),
            ],
            options={
                'verbose_name': 'Количество комнат',
                'verbose_name_plural': 'Количество комнат',
            },
        ),
        migrations.CreateModel(
            name='Safety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('safety', models.CharField(max_length=255, unique=True, verbose_name='безапасность')),
            ],
            options={
                'verbose_name': 'Безапасность',
                'verbose_name_plural': 'Безапасности',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Серия дома')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Серия',
                'verbose_name_plural': 'Серии',
            },
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone', models.CharField(max_length=255, unique=True, verbose_name='телефон')),
            ],
            options={
                'verbose_name': 'Телефон',
                'verbose_name_plural': 'Телефоны',
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(default=2025, unique=True, verbose_name='год')),
            ],
            options={
                'verbose_name': 'Год',
                'verbose_name_plural': 'Года',
                'ordering': ['-year'],
            },
        ),
        migrations.CreateModel(
            name='ResidentialComplex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название ЖК')),
                ('developer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='developer', to='real_estate.developer', verbose_name='Застройщик')),
            ],
            options={
                'verbose_name': 'Жилой Комплекс',
                'verbose_name_plural': 'Жилые Комплексы',
            },
        ),
        migrations.CreateModel(
            name='RealEstateAdImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='real_estate_images/', verbose_name='Фотография')),
                ('is_main', models.BooleanField(default=False, verbose_name='Главное фото')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='real_estate.realestatead', verbose_name='Объявление')),
            ],
            options={
                'verbose_name': 'Фотография',
                'verbose_name_plural': 'Фотографии',
                'ordering': ['-is_main', 'uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='realestatead',
            name='safety',
            field=models.ManyToManyField(blank=True, related_name='real_estate_safety', to='real_estate.safety', verbose_name='безопасность'),
        ),
        migrations.AddField(
            model_name='realestatead',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='real_estate_ad_subscription', to='common.subscription', verbose_name='Срок рекламы'),
        ),
        migrations.AddField(
            model_name='realestatead',
            name='telephone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='real_estate_telephone', to='real_estate.telephone', verbose_name='телефония'),
        ),
    ]
